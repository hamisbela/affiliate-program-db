---
import type { ParsedProgram } from '../utils/csvParser';

interface Props {
  program: ParsedProgram;
}

const { program } = Astro.props;
---

<div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 p-6 hover-lift animate-fade-in">
  <div class="mb-6">
    <h3 class="text-xl font-semibold bg-gradient-to-r from-blue-600 to-blue-800 bg-clip-text text-transparent mb-2">
      {program.name}
    </h3>
    <p class="text-gray-600 text-sm leading-relaxed">{program.description}</p>
  </div>
  
  <div class="grid grid-cols-2 gap-4 mb-6">
    <div class="bg-gray-50 rounded-lg p-3">
      <p class="text-sm text-gray-500 mb-1">Product Type</p>
      <p class="font-medium text-gray-900 text-sm">{program.productType}</p>
    </div>
    <div class="bg-gray-50 rounded-lg p-3">
      <p class="text-sm text-gray-500 mb-1">Commission</p>
      <p class="font-medium text-blue-600 text-sm">{program.commission}</p>
    </div>
    <div class="bg-gray-50 rounded-lg p-3">
      <p class="text-sm text-gray-500 mb-1">Cookie Duration</p>
      <p class="font-medium text-gray-900 text-sm">{program.cookieDuration}</p>
    </div>
    <div class="bg-gray-50 rounded-lg p-3">
      <p class="text-sm text-gray-500 mb-1">Categories</p>
      <div class="flex flex-wrap gap-1">
        {program.categories.slice(0, 2).map(category => (
          <span class="text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded">{category}</span>
        ))}
        {program.categories.length > 2 && (
          <span class="text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded">+{program.categories.length - 2}</span>
        )}
      </div>
    </div>
  </div>
  
  <a
    href={program.signupLink}
    target="_blank"
    rel="noopener noreferrer"
    class="block w-full text-center bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white py-3 px-4 rounded-lg font-medium transition-all duration-300 transform hover:scale-[1.02] text-sm"
  >
    Join Program â†’
  </a>
</div>